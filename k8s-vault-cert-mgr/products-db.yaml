---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres
automountServiceAccountToken: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      service: postgres
      app: postgres
  template:
    metadata:
      labels:
        service: postgres
        app: postgres
      annotations:
        # prometheus.io/scrape: "true"
        # prometheus.io/port: "9102"
        # consul.hashicorp.com/connect-inject: "true"
        # vault.hashicorp.com/log-level: "debug"
        # vault.hashicorp.com/agent-inject: "true"
        # vault.hashicorp.com/role: "postgres"
        # vault.hashicorp.com/agent-inject-secret-config: "secrets/data/taipeidevopsday"
        # # Environment variable export template
        # vault.hashicorp.com/agent-inject-template-config: |
        #   {{ with secret "secrets/data/taipeidevopsday" -}}
        #     export POSTGRES_PASSWORD="{{ .Data.data.postgress_password }}"
        #   {{- end }}
    spec:
      serviceAccountName: postgres
      containers:
        - name: postgres
          image: hashicorpdemoapp/product-api-db:v0.0.17
          imagePullPolicy: Always
          # command: ["/bin/sh"]
          # args:
          #   ["-c", "source /vault/secrets/config;docker-entrypoint.sh postgres"]
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: products
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: Taipei-is-nice
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: "pgdata"
      volumes:
        - name: pgdata
          emptyDir: {}
---
# https://www.vaultproject.io/docs/auth/kubernetes/#configuring-kubernetes
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: role-tokenreview-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: postgres
    namespace: default
